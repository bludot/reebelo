apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.name }}
  namespace: reebelo
  labels:
    app: {{ .Values.name }}
    service: backend
spec:
  selector:
    app: {{ .Values.name }}
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
      name: http-local-3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  namespace: reebelo
  labels:
    app: {{ .Values.name }}
spec:
  minReadySeconds: 3
  revisionHistoryLimit: 5
  progressDeadlineSeconds: 60
  strategy:
    rollingUpdate:
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      annotations:
      # prometheus.io/scrape: "true"
      # prometheus.io/port: "9797"
      labels:
        app: {{ .Values.name }}
    spec:
      containers:
        - name: {{ .Values.name }}
          image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            ######################
            # NestJS
            ######################
            - name: ENV
              value: "production"
            - name: PORT
              value: "3000"
            - name: SERVICE_VERSION
              value: "{{ .Values.image.tag }}"
            - name: HOSTNAME
              value: "0.0.0.0"
            - name: NESTJS_LOGS_ENABLED
              value: "true"
            - name: LOG_LEVEL
              value: debug

            ######################
            # Postgres
            ######################
            - name: DBHOST
              value: {{ .Values.name }}.datalayer.svc.cluster.local
            - name: DBPORT
              value: "3306"
            - name: DBUSERNAME
              value: root
            - name: DBPASSWORD
              value: "mysecretpassword"
            - name: DBDATABASE
              value: {{ .Values.dbName }}
            # - name: NODE_TLS_REJECT_UNAUTHORIZED
            #   value: "0"


            
            ######################
            # JWT Config
            ######################
            - name: JWT_SECRET
              value: secret
            - name: JWT_EXPIRES_IN
              value: 600s

            ######################
            # RefreshToken Config
            ######################
            - name: TOKEN_EXPIRATION_DAYS
              value: "30"

          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 3000
            periodSeconds: 5
          resources:
            limits:
              cpu: 2000m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 64Mi

      imagePullSecrets:
        - name: regcred
